



ICNRG Working Group                                          C. Tschudin
Internet-Draft                                       University of Basel
Intended status: Informational                                   C. Wood
Expires: March 12, 2016                                             PARC
                                                      September 09, 2015


                ICN Manifest Requirements and Use Cases
                 draft-wood-icnrg-manifestrequirements

Abstract

   The definition of an ICN manifest is defined, and a catalog of
   motivating use cases is presented.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on March 12, 2016.

Copyright Notice

   Copyright (c) 2015 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





Tschudin & Wood          Expires March 12, 2016                 [Page 1]

Internet-Draft                   ICN-LLC                  September 2015


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  A Minimalist Picture  . . . . . . . . . . . . . . . . . . . .   2
   3.  Manifest Requirements . . . . . . . . . . . . . . . . . . . .   3
   4.  Possible Use Cases  . . . . . . . . . . . . . . . . . . . . .   4
   5.  Security Considerations . . . . . . . . . . . . . . . . . . .   6
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   6

1.  Introduction

   The purpose of this document is to motivate the design of ICN
   manifests and illustrate several use cases in which they might be
   used.  It is not intended to specify a standard design, nor is it
   meant to evaluate existing designs.  The goal is simply to present a
   set of (non-exhaustive) requirements that the ICN community can use
   when evaluating different manifest proposals.

2.  A Minimalist Picture

   A manifest is a index used to encode a large and possibly infinite
   stream of data.  In most cases, this stream is static and finite,
   meaning that the manifest simply encodes a large piece of contiguous
   data.  Logically, a manifest may be perceived as a collection of
   pointers to other Content Objects and some additional metadata (TBD),
   as shown below.

























Tschudin & Wood          Expires March 12, 2016                 [Page 2]

Internet-Draft                   ICN-LLC                  September 2015


   +---------------+
   | TYPE=MANIFEST |
   |---------------|
   |   metadata    |
   |---------------|
   |   Pointer 1   | ==> +--------------+
   |               |     | TYPE=CONTENT |
   |               |     |   <payload>  |
   |               |     +--------------+
   |   Pointer 2   | ==> +--------------+
   |               |     | TYPE=CONTENT |
   |               |     |   <payload>  |
   |               |     +--------------+
   |   Pointer 3   | ==> +---------------+
   +---------------+     | TYPE=MANIFEST |
                         |---------------|
                         |   Pointer 1   | ==> +--------------+
                         +---------------+     | TYPE=CONTENT |
                                               |   <payload>  |
                                               +--------------+

         Figure 1: A minimalist representation of an ICN manifest.

   Details about the type and encoding of metadata, the role and usage
   of Content Object pointers, and the types of data that can be
   represented by a Manifest are an ongoing design challenges.

3.  Manifest Requirements

   In this section we enumerate the functional requirements for
   Manifests.

   1.   A manifest shall be a type of Content Object.

   2.   The wire format representation of a manifest shall be able to be
        interpreted by a forwarder without needing to parse the entire
        Content Object.

   3.   A manifest shall be able to encode a large and (not necessarily)
        contiguous piece of data that is beyond the size limitations of
        a Content Object.

   4.   A manifest payload may contain both application data and
        pointers to other Content Objects.

   5.   For each pointer in a manifest, the type of Content Object to
        which the pointer refers shall be explicitly listed.




Tschudin & Wood          Expires March 12, 2016                 [Page 3]

Internet-Draft                   ICN-LLC                  September 2015


   6.   A manifest may contain pointers to other Content Objects which
        are themselves manifests.

   7.   A manifest shall contain an optional reference to a structured
        decryption metadata (SDM) access control structure.

   8.   The information in a manifest SDM shall apply to (a) any
        application data in the manifest and (b) any pointers to child
        Content Objects.

   9.   A manifest shall encode default metadata about the encoded
        application data and child Content Objects, including: total
        size (in bytes).

   10.  A manifest shall contain an optional reference to a Content
        Object which contains application-specific metadata.

   11.  A manifest shall support named and nameless Content Objects.

   12.  A manifest shall be able to carry cleartext and ciphertext
        payloads.

   13.  A manifest shall encapsulate and indicate the presence of
        encrypted data.

4.  Possible Use Cases

   In this section we enumerate possible use cases that can be addressed
   by Manifests.  This list is not exhaustive, and is open to
   modification and extension from the community.

   +----+------------------------------+-------------------------------+
   | ID | Network Use Cases            | Application Use Cases         |
   +----+------------------------------+-------------------------------+
   | 1  |                              |                               |
   |    |                              |                               |
   | 2  | Amortize verification cost   | Amortize verification cost of |
   |    | of chunks                    | chunks                        |
   |    |                              |                               |
   | 3  | Support network-layer        |                               |
   |    | prefetching                  |                               |
   |    |                              |                               |
   | 4  |                              | Store only Content Object     |
   |    |                              | metadata                      |
   |    |                              |                               |
   | 5  | Support named and nameless   | Support named and nameless    |
   |    | Content Objects              | Content Objects               |
   |    |                              |                               |



Tschudin & Wood          Expires March 12, 2016                 [Page 4]

Internet-Draft                   ICN-LLC                  September 2015


   | 6  |                              | Efficiently encode sparse     |
   |    |                              | Content Object files with     |
   |    |                              | possible compression          |
   |    |                              |                               |
   | 7  | Provide alternate sources    |                               |
   |    | for a Content Object data    |                               |
   |    | blocks (i.e., give more than |                               |
   |    | one routing hint)            |                               |
   |    |                              |                               |
   | 8  | Serve as thunks in Named     | Serve as thunks in Named      |
   |    | Function Networking          | Function Networking           |
   |    |                              |                               |
   | 9  | Describe the namespace of a  | Describe the namespace of a   |
   |    | particular Content Object    | particular Content Object     |
   |    |                              |                               |
   | 10 | Store authenticated denial   | Store authenticated denial    |
   |    | namespace descriptions (see  | namespace descriptions (see   |
   |    | above)                       | above)                        |
   |    |                              |                               |
   | 11 |                              | Encode different traversal    |
   |    |                              | strategies for visiting       |
   |    |                              | Content Object pointers       |
   |    |                              | contained in a Manifest       |
   |    |                              |                               |
   | 12 |                              | Encode parallel forks (file   |
   |    |                              | resource forks or property    |
   |    |                              | lists associated with a       |
   |    |                              | Content Object)               |
   |    |                              |                               |
   | 13 | Support Content Object       | Support Content Object        |
   |    | personalization and          | personalization and           |
   |    | internationalization         | internationalization          |
   |    |                              |                               |
   | 14 |                              | Group related data together   |
   |    |                              | (e.g., for Web page content)  |
   |    |                              |                               |
   | 15 | Provide transport-layer      |                               |
   |    | information                  |                               |
   |    |                              |                               |
   | 16 | Facilitate Content Object,   |                               |
   |    | service, or entity discovery |                               |
   |    |                              |                               |
   | 17 | Enable content deletion in   |                               |
   |    | routers/forwarders           |                               |
   |    |                              |                               |
   | 18 |                              | Embed authentication key      |
   |    |                              | information (e.g., key        |
   |    |                              | catalogs)                     |



Tschudin & Wood          Expires March 12, 2016                 [Page 5]

Internet-Draft                   ICN-LLC                  September 2015


   |    |                              |                               |
   | 19 |                              | Serve as database cursor      |
   |    |                              |                               |
   | 20 |                              | Turn the manifest data        |
   |    |                              | structure into a block chain  |
   |    |                              | (tamperproof open list of     |
   |    |                              | records)                      |
   |    |                              |                               |
   | 21 |                              | (Decentralized) trusted       |
   |    |                              | timestamping                  |
   |    |                              |                               |
   | 22 |                              | Backend storage for a control |
   |    |                              | versioning system, GitHub     |
   |    |                              | style                         |
   |    |                              |                               |
   | 23 |                              | Encode open-ended data        |
   |    |                              | streams (i.e., manifests may  |
   |    |                              | point to data not yet in      |
   |    |                              | existence)                    |
   +----+------------------------------+-------------------------------+

5.  Security Considerations

   TODO.

Authors' Addresses

   Christian Tschudin
   University of Basel

   Email: christian.tschudin@unibas.ch


   Christopher A. Wood
   PARC

   Email: cwood@parc.com














Tschudin & Wood          Expires March 12, 2016                 [Page 6]

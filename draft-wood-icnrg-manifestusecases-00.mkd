---
title: ICN Advanced Manifest Use Cases
abbrev: ICNManifestUseCases
docname: draft-wood-icnrg-icnmanifestusecases
date: 2015-2-28
category: info

ipr: trust200902
area: General
workgroup: ICNRG Working Group
keyword: Internet-Draft

stand_alone: yes
pi: [toc, sortrefs, symrefs]

author:
 -
    ins: C. Tschudin
    name: Christian Tschudin
    organization: University of Basel
    email: christian.tschudin@unibas.ch
 -
    ins: C. Westphal
    name: Cerdic Westphal
    org: Huawei
    email: Cedric.Westphal@huawei.com
 -
   ins: C. A. Wood
   name: Christopher A. Wood
   org: PARC
   email: christopher.wood@parc.com

normative:
    FLIC:
        target: http://github.com/tschudin/icn-flic-rfc/blob/master/draft-tschudin-icnrg-flic-00.txt
        title: File-Like ICN Collection (FLIC)
        author:
            -
                name: C. Tschudin
                ins: University of Basel
            -   
                name: C. Wood
                ins: PARC, Inc.

--- abstract

A catalog of motivating use cases for ICN Manifests is presented.

--- middle

Introduction   
============

The purpose of this document is to motivate the design of advanced ICN Manifests and
illustrate several network and application use cases in which they might be used. These manifests may be built
on top of the base FLIC manifest {{FLIC}}. This document is not intended
to specify a standard design.

# Use Cases

In this section we enumerate possible use cases that could be addressed by advanced
Manifests. This list is not exhaustive, and is open to modification and extension
from the community.


| 1 | Amortize verification cost of chunks| NET APP
| 2 | Support network-layer prefetching | NET APP
| 13 | Group related data together (independent application datum that are typically fetched as a whole) -> directory | APP NET (to hint at caching strategies)
| 3 | Store only Content Object metadata | NET APP  (offload metadata in content objects to parent manifest, authenticated denial data, facilitate service or entity discovery, embed authentication key information (e.g., key catalogs))
| 4 | Support named and nameless Content Objects | NET APP
| 6 | Provide alternate sources for a Content Object data blocks (i.e., give more than one routing hint) |
| 8 | Describe the namespace of a particular Content Object | APP (describe different names and related names for this content object)
Encode different content locator strategies | NET APP
Encode different traversal strategies for visiting Content Object pointers contained in a Manifest | APP
Support Content Object personalization and internationalization | APP (same name but the content depends on location and identity, for example)
| 22 | Encode open-ended data streams (i.e., manifests may point to data not yet in existence) | APP NET
| 23 | Diff-encoded content versioning | APP




| 21 | | Backend storage for a control versioning system, GitHub style |
| 19 | Turn the manifest data structure into a block chain (tamperproof open list of records) or Be used by or as a (decentralized) trusted timestamping service | APP ()
| 14 | Provide transport-layer information or aid transport protocols | (provide windowing information or suggestions about downstream traffic) APP NET (friendliness)
| 5 | Efficiently encode sparse Content Object files with possible compression |
| 7 | Serve as thunks in Named Function Networking |
| 18 | | Serve as a database cursor |




Security Considerations
=======================

TODO.

--- back

---
title: ICN Advanced Manifest Use Cases
abbrev: ICNManifestUseCases
docname: draft-wood-icnrg-icnmanifestusecases
date: 2015-2-28
category: info

ipr: trust200902
area: General
workgroup: ICNRG Working Group
keyword: Internet-Draft

stand_alone: yes
pi: [toc, sortrefs, symrefs]

author:
 -
    ins: C. Tschudin
    name: Christian Tschudin
    organization: University of Basel
    email: christian.tschudin@unibas.ch
 -
    ins: C. Westphal
    name: Cerdic Westphal
    org: Huawei
    email: Cedric.Westphal@huawei.com
 -
   ins: C. A. Wood
   name: Christopher A. Wood
   org: PARC
   email: christopher.wood@parc.com

normative:
    FLIC:
        target: http://github.com/tschudin/icn-flic-rfc/blob/master/draft-tschudin-icnrg-flic-00.txt
        title: File-Like ICN Collection (FLIC)
        author:
            -
                name: C. Tschudin
                ins: University of Basel
            -   
                name: C. Wood
                ins: PARC, Inc.

--- abstract

A catalog of motivating use cases for ICN Manifests is presented.

--- middle

Introduction   
============

The purpose of this document is to motivate the design of advanced ICN Manifests and
illustrate several network and application use cases in which they might be used. These manifests may be built
on top of the base FLIC manifest {{FLIC}}. This document is not intended
to specify a standard design. 

# Use Cases

In this section we enumerate possible use cases that could be addressed by advanced 
Manifests. This list is not exhaustive, and is open to modification and extension 
from the community.

| ID | Network Use Case        | Application Use Case       |
| 1 | Amortize verification cost of chunks| Amortize verification cost of chunks|
| 2 | Support network-layer prefetching |  |
| 3 | Store only Content Object metadata (?) | Store only Content Object metadata |
| 4 | Support named and nameless Content Objects | Support named and nameless Content Objects |
| 5 | | Efficiently encode sparse Content Object files with possible compression |
| 6 | Provide alternate sources for a Content Object data blocks (i.e., give more than one routing hint) | |
| 7 | Serve as thunks in Named Function Networking | Serve as thunks in Named Function Networking |
| 8 | Describe the namespace of a particular Content Object | Describe the namespace of a particular Content Object |
| 9 | Store authenticated denial namespace descriptions (see above) | Store authenticated denial namespace descriptions (see above) |
| 10 | Encode different content locator strategies | Encode different traversal strategies for visiting Content Object pointers contained in a Manifest |
| 11 | | Encode parallel forks (file resource forks or property lists associated with a Content Object) |
| 12 | | Support Content Object personalization and internationalization |
| 13 |Group related data together (independent application datum that are typically fetched as a whole) | Group related data together (e.g., for Web page content) |
| 14 | Provide transport-layer information or aid transport protocols | |
| 15 | Facilitate Content Object, service, or entity discovery | |
| 16 | Enable content deletion in routers/forwarders | |
| 17 | | Embed authentication key information (e.g., key catalogs) |
| 18 | | Serve as a database cursor |
| 19 | | Turn the manifest data structure into a block chain (tamperproof open list of records) |
| 20 | | Be used by or as a (decentralized) trusted timestamping service |
| 21 | | Backend storage for a control versioning system, GitHub style |
| 22 | | Encode open-ended data streams (i.e., manifests may point to data not yet in existence) |
| 23 | | Diff-encoded content versioning |

Security Considerations
=======================

TODO.

--- back
